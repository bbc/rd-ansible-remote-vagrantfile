# Get current role name, and append branch name and build number if set
# Give the virtualbox name a timestamp plus random to prevent naming collision
current_role = File.basename(File.expand_path("..", Dir.pwd))
# Strip special characters
current_role = current_role.gsub(/[^A-Za-z0-9 ]/, '')
# Add timestamp and random
current_role << "-#{Time.now.to_i}-#{rand(999)}"

Vagrant.configure("2") do |config|

  # install plugins
  config.vagrant.plugins = ['vagrant-vbguest']

  puts "Configuring proxy settings..."
  if Vagrant.has_plugin?("vagrant-proxyconf")
    puts "Found vagrant-proxyconf plugin - Now checking environment variables..."
    if ENV["http_proxy"]
      puts "http_proxy is set to: " + ENV["http_proxy"]
      config.proxy.http     = ENV["http_proxy"]
    elsif ENV["HTTP_PROXY"]
      puts "HTTP_PROXY is set to: " + ENV["HTTP_PROXY"]
      config.proxy.http     = ENV["HTTP_PROXY"]
    end
    if ENV["https_proxy"]
      puts "https_proxy is set to: " + ENV["https_proxy"]
      config.proxy.https    = ENV["https_proxy"]
    elsif ENV["HTTPS_PROXY"]
      puts "HTTPS_PROXY is set to: " + ENV["HTTPS_PROXY"]
      config.proxy.https    = ENV["HTTPS_PROXY"]
    end
    if ENV["no_proxy"]
      puts "no_proxy paths set to: " + ENV["no_proxy"]
      config.proxy.no_proxy = ENV["no_proxy"] + ",172.28.0.1/16"
    elsif ENV["NO_PROXY"]
      puts "NO_PROXY paths set to: " + ENV["NO_PROXY"]
      config.proxy.no_proxy = ENV["NO_PROXY"] + ",172.28.0.1/16"
    end
  end

  config.vm.define "noble", autostart: false do |noble|

    # Virtualbox provider
    noble.vm.provider "virtualbox" do |v, override|
      # Ubuntu Noble 24.04
      v.name = current_role
      override.vm.box = "ubuntu/noble64"
      v.customize ["modifyvm", :id, "--nic2", "nat"]
      v.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
    end
  end

  config.vm.define "jammy", primary: true do |jammy|

    # Virtualbox provider
    jammy.vm.provider "virtualbox" do |v, override|
      # Ubuntu Jammy 22.04
      v.name = current_role
      override.vm.box = "ubuntu/jammy64"
      v.customize ["modifyvm", :id, "--nic2", "nat"]
      v.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
    end
  end

  config.vm.define "focal", autostart: false do |focal|

    # Virtualbox provider
    focal.vm.provider "virtualbox" do |v, override|
      # Ubuntu Focal 20.04
      v.name = current_role
      override.vm.box = "ubuntu/focal64"
      v.customize ["modifyvm", :id, "--nic2", "nat"]
      v.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
    end
  end

  config.vm.provision "ansible" do |ansible|
    # Pull requirements
    ansible.galaxy_roles_path = ".vagrant/roles"
    # Include requirements if its present
    if File.exist?('requirements.yml')
      ansible.galaxy_role_file = "requirements.yml"
    end
    # Run playbook
    ansible.playbook = "test.yml"
    # Load in extra variables if passed in
    ansible.raw_arguments = Shellwords.shellsplit(ENV['ANSIBLE_ARGS']) if ENV['ANSIBLE_ARGS']
    # Set verbosity
    ansible.verbose = true
    # Increase default threads and allow pipelining for speed, load in extra variables
    ansible.raw_arguments = ['-T 25', '-e pipelining=True'] + Shellwords.shellsplit(ENV['ANSIBLE_ARGS']) if ENV['ANSIBLE_ARGS']
  end
end
